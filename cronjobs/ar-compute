#!/bin/bash

RUN_DATE=$(/bin/date --date "-2 day" +%Y-%m-%d)
RUN_DATE_UNDER=$(echo $RUN_DATE | sed 's/-/_/g')
PARTITIONDATE=$(echo $RUN_DATE | sed 's/-//g')
SYNC_DIR=/var/lib/ar-sync

### run prefilter  (Input: date e.g. 2013-07-05) (Output: /var/lib/ar-sync/prefilter_%Y_%m_%d.out)
/usr/libexec/ar-sync/prefilter -d $RUN_DATE

hive -e "LOAD DATA LOCAL INPATH \"/var/lib/ar-sync/prefilter_${RUN_DATE_UNDER}.out\" OVERWRITE INTO TABLE raw_data PARTITION (dates=${PARTITIONDATE})"

YEAR=`echo $RUN_DATE_UNDER | awk -F'_' '{print $1}'`
MONTH=`echo $RUN_DATE_UNDER | awk -F'_' '{print $2}'`
DAY=`echo $RUN_DATE_UNDER | awk -F'_' '{print $3}'`

### prepare poems
echo "Prepare poems for $RUN_DATE"
grep ROC_CRITICAL $SYNC_DIR/poem_sync_$RUN_DATE_UNDER.out | cut -d $(echo -e '\x01') --output-delimiter=$(echo -e '\x01') -f "3 4 5 6"| grep "ch.cern.sam.ROC_CRITICAL" | sort -u | awk 'BEGIN {ORS="|"; RS="\n"} {print $0}' | gzip -c | base64 | awk 'BEGIN {ORS=""} {print $0}' > $SYNC_DIR/poem_sync_$RUN_DATE_UNDER.out.clean

### prepare topology
echo "Prepare topology for $RUN_DATE"
cat $SYNC_DIR/sites_$RUN_DATE_UNDER.out | sort -u > $SYNC_DIR/sites_$RUN_DATE_UNDER.out.clean
cat $SYNC_DIR/sites_$RUN_DATE_UNDER.out.clean | sed 's/\x01/ /g' | grep " SRM " | sed 's/ SRM / SRMv2 /g' | sed 's/ /\x01/g' >> $SYNC_DIR/sites_$RUN_DATE_UNDER.out.clean
cat $SYNC_DIR/sites_$RUN_DATE_UNDER.out.clean | awk 'BEGIN {ORS="|"; RS="\r\n"} {print $0}' | gzip -c | base64 | awk 'BEGIN {ORS=""} {print $0}' > $SYNC_DIR/sites_$RUN_DATE_UNDER.zip
rm -f $SYNC_DIR/sites_$RUN_DATE_UNDER.out.clean
split -b 30092 $SYNC_DIR/sites_$RUN_DATE_UNDER.zip $SYNC_DIR/sites_$RUN_DATE_UNDER.
rm -f $SYNC_DIR/sites_$RUN_DATE_UNDER.zip


### prepare downtimes
echo "Prepare downtimes for $RUN_DATE"
/usr/libexec/ar-sync/downtime-sync -d $RUN_DATE
cat $SYNC_DIR/downtimes_$RUN_DATE.out | sed 's/\x01/ /g' | grep " SRM " | sed 's/ SRM / SRMv2 /g' | sed 's/ /\x01/g' > $SYNC_DIR/downtimes_cache_$RUN_DATE.out
cat $SYNC_DIR/downtimes_$RUN_DATE.out >> $SYNC_DIR/downtimes_cache_$RUN_DATE.out
cat $SYNC_DIR/downtimes_cache_$RUN_DATE.out | awk 'BEGIN {ORS="|"; RS="\r\n"} {print $0}' | gzip -c | base64 | awk 'BEGIN {ORS=""} {print $0}' > $SYNC_DIR/downtimes_$RUN_DATE.zip
rm -f $SYNC_DIR/downtimes_cache_$RUN_DATE.out

### run calculator.pig
pig -useHCatalog -param in_date=$RUN_DATE \
    -param downtimes_file=$SYNC_DIR/downtimes_$RUN_DATE.zip \
    -param poem_file=$SYNC_DIR/poem_sync_$RUN_DATE_UNDER.out.clean \
    -param topology_file1=$SYNC_DIR/sites_$RUN_DATE_UNDER.aa \
    -param topology_file2=$SYNC_DIR/sites_$RUN_DATE_UNDER.ab \
    -param topology_file3=$SYNC_DIR/sites_$RUN_DATE_UNDER.ac \
    -f /usr/libexec/ar-compute/pig/calculator.pig

rm -f $SYNC_DIR/poem_sync_$RUN_DATE_UNDER.out.clean
rm -f $SYNC_DIR/downtimes_$RUN_DATE.zip
rm -f $SYNC_DIR/sites_$RUN_DATE_UNDER.aa \
      $SYNC_DIR/sites_$RUN_DATE_UNDER.ab \
      $SYNC_DIR/sites_$RUN_DATE_UNDER.ac

